<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.highcloud</groupId>
    <version>1.0-SNAPSHOT</version>
    <artifactId>powerbidataset</artifactId>
    <packaging>jar</packaging>
    <name>powerbiDataset</name>
<properties>
  <scala.version>2.10.4</scala.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <akka.group>org.spark-project.akka</akka.group>
    <akka.version>2.3.4-spark</akka.version>
    <java.version>1.7</java.version>
    <sbt.project.name>spark</sbt.project.name>
    <scala.macros.version>2.0.1</scala.macros.version>
    <mesos.version>0.21.0</mesos.version>
    <mesos.classifier>shaded-protobuf</mesos.classifier>
    <slf4j.version>1.7.10</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <hadoop.version>2.2.0</hadoop.version>
    <protobuf.version>2.4.1</protobuf.version>
    <yarn.version>${hadoop.version}</yarn.version>
    <hbase.version>0.98.7-hadoop1</hbase.version>
    <hbase.artifact>hbase</hbase.artifact>
    <flume.version>1.4.0</flume.version>
    <zookeeper.version>3.4.5</zookeeper.version>
    <hive.group>org.spark-project.hive</hive.group>
    <!-- Version used in Maven Hive dependency -->
    <hive.version>0.13.1a</hive.version>
    <!-- Version used for internal directory structure -->
    <hive.version.short>0.13.1</hive.version.short>
    <derby.version>10.10.1.1</derby.version>
    <parquet.version>1.6.0rc3</parquet.version>
    <jblas.version>1.2.3</jblas.version>
    <jetty.version>8.1.14.v20131031</jetty.version>
    <orbit.version>3.0.0.v201112011016</orbit.version>
    <chill.version>0.5.0</chill.version>
    <ivy.version>2.4.0</ivy.version>
    <oro.version>2.0.8</oro.version>
    <codahale.metrics.version>3.1.0</codahale.metrics.version>
    <avro.version>1.7.7</avro.version>
    <avro.mapred.classifier></avro.mapred.classifier>
    <jets3t.version>0.7.1</jets3t.version>
    <aws.java.sdk.version>1.8.3</aws.java.sdk.version>
    <aws.kinesis.client.version>1.1.0</aws.kinesis.client.version>
    <commons.httpclient.version>4.2.6</commons.httpclient.version>
    <commons.math3.version>3.1.1</commons.math3.version>
    <test_classpath_file>${project.build.directory}/spark-test-classpath.txt</test_classpath_file>
    <scala.version>2.10.4</scala.version>
    <scala.binary.version>2.10</scala.binary.version>
    <jline.version>${scala.version}</jline.version>
    <jline.groupid>org.scala-lang</jline.groupid>
    <jodd.version>3.6.3</jodd.version>
    <codehaus.jackson.version>1.8.8</codehaus.jackson.version>
    <fasterxml.jackson.version>2.4.4</fasterxml.jackson.version>
    <snappy.version>1.1.1.6</snappy.version>
    <netlib.java.version>1.1.2</netlib.java.version>

    <!--
      Dependency scopes that can be overridden by enabling certain profiles. These profiles are
      declared in the projects that build assemblies.

      For other projects the scope should remain as "compile", otherwise they are not available
      during compilation if the dependency is transivite (e.g. "bagel/" depending on "core/" and
      needing Hadoop classes in the classpath to compile).
    -->
    <flume.deps.scope>compile</flume.deps.scope>
    <hadoop.deps.scope>compile</hadoop.deps.scope>
    <hbase.deps.scope>compile</hbase.deps.scope>
    <hive.deps.scope>compile</hive.deps.scope>
    <parquet.deps.scope>compile</parquet.deps.scope>

    <!--
      Overridable test home. So that you can call individual pom files directory without
      things breaking.
    -->
    <spark.test.home>${session.executionRootDirectory}</spark.test.home>

    <PermGen>64m</PermGen>
    <MaxPermGen>512m</MaxPermGen>
    <CodeCacheSize>512m</CodeCacheSize>
</properties>

    <dependencies>
     <dependency>                                                              
        <groupId>org.scala-lang</groupId>                                       
        <artifactId>scala-compiler</artifactId>                                 
        <version>${scala.version}</version>                                     
      </dependency>                                                             
      <dependency>                                                              
        <groupId>org.scala-lang</groupId>                                       
        <artifactId>scala-reflect</artifactId>                                  
        <version>${scala.version}</version>                                     
      </dependency>                                                             
      <dependency>                                                              
        <groupId>org.scala-lang</groupId>                                       
        <artifactId>scala-library</artifactId>                                  
        <version>${scala.version}</version>                                     
      </dependency>                                                             
      <dependency>                                                              
        <groupId>org.scala-lang</groupId>                                       
        <artifactId>scala-actors</artifactId>                                   
        <version>${scala.version}</version>                                     
      </dependency>                                                             
      <dependency>                                                              
        <groupId>org.scala-lang</groupId>                                       
        <artifactId>scalap</artifactId>                                         
        <version>${scala.version}</version>                                     
      </dependency>                                                             
        <dependency>
            <groupId>org.glassfish.jersey.bundles</groupId>
            <artifactId>jaxrs-ri</artifactId>
            <version>2.17</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>2.17</version>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>adal4j</artifactId>
            <version>0.0.3</version>
        </dependency>
        <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_2.10</artifactId>
        <version>1.5.0</version>
        <scope>provided</scope>
        </dependency>
        <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-mllib_2.10</artifactId>
        <version>1.5.0</version>
        <scope>provided</scope>
        </dependency>
<dependency>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-graphx_2.10</artifactId>
    <version>1.5.0</version>
        <scope>provided</scope>
</dependency>
<dependency>
    <groupId>org.jsoup</groupId>
    <artifactId>jsoup</artifactId>
    <version>1.8.2</version>
</dependency>
<dependency>
    <groupId>edu.stanford.nlp</groupId>
    <artifactId>stanford-corenlp</artifactId>
    <version>3.4.1</version>
</dependency>

        <dependency>
        <groupId>com.github.scopt</groupId>
        <artifactId>scopt_2.10</artifactId>
        <version>3.2.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
             <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>com.dataman.Powerbi.Test</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>assembly</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
        <plugin>                                                                
          <groupId>net.alchim31.maven</groupId>                                 
          <artifactId>scala-maven-plugin</artifactId>                           
          <version>3.2.0</version>                                              
          <executions>                                                          
            <execution>                                                         
              <id>eclipse-add-source</id>                                       
              <goals>                                                           
                <goal>add-source</goal>                                         
              </goals>                                                          
            </execution>                                                        
            <execution>                                                         
              <id>scala-compile-first</id>                                      
              <phase>process-resources</phase>                                  
              <goals>                                                           
                <goal>compile</goal>                                            
              </goals>                                                          
            </execution>                                                        
            <execution>                                                         
              <id>scala-test-compile-first</id>                                 
              <phase>process-test-resources</phase>                             
              <goals>                                                           
                <goal>testCompile</goal>                                        
              </goals>                                                          
            </execution>                                                        
            <execution>                                                         
              <id>attach-scaladocs</id>                                         
              <phase>verify</phase>                                             
              <goals>                                                           
                <goal>doc-jar</goal>                                            
              </goals>                                                          
            </execution>                                                        
          </executions>                                                         
          <configuration>                                                       
            <scalaVersion>${scala.version}</scalaVersion>                       
            <recompileMode>incremental</recompileMode>                          
            <useZincServer>true</useZincServer>                                 
            <args>                                                              
              <arg>-unchecked</arg>                                             
              <arg>-deprecation</arg>                                           
              <arg>-feature</arg>                                               
            </args>                                                             
            <javacArgs>                                                         
              <javacArg>-source</javacArg>                                      
              <javacArg>${java.version}</javacArg>                              
              <javacArg>-target</javacArg>                                      
              <javacArg>${java.version}</javacArg>                              
            </javacArgs>                                                        
            <!-- The following plugin is required to use quasiquotes in Scala 2.10 and is used
                 by Spark SQL for code generation. -->                          
            <compilerPlugins>                                                   
              <compilerPlugin>                                                  
                <groupId>org.scalamacros</groupId>                              
                <artifactId>paradise_${scala.version}</artifactId>              
                <version>${scala.macros.version}</version>                      
              </compilerPlugin>                                                 
            </compilerPlugins>                                                  
          </configuration>                                                      
        </plugin>  
        </plugins>
    </build>
</project>
